//4. Median of Two Sorted Arrays
import java.util.Arrays;
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int[] arr = new int[nums1.length+nums2.length];
        int index = 0;
        for(int i = 0; i< nums1.length;i++){
            arr[index++]= nums1[i];
        }
        for(int i = 0;i<nums2.length;i++){
            arr[index++]=nums2[i];
        }
        Arrays.sort(arr);
        if(arr.length%2==1){
            return (double)arr[arr.length/2];
        }
        else{
            return ((double)arr[arr.length/2] + (double)arr[arr.length/2-1])/2.0;
        }
    }
}


// More Optimize code.

class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int i = 0 ;
        int j = 0;
        int k = 0;
        int[] result = new int[nums1.length+nums2.length];
        while(i<nums1.length && j<nums2.length){
            if(nums1[i]<nums2[j]){
                result[k] = nums1[i];
                i++;
                k++;
            }
            else{
                result[k]=nums2[j];
                j++;
                k++;
            }
        }
        while(i<nums1.length){
            result[k]=nums1[i];
            i++;
            k++;
        }
        while(j<nums2.length){
            result[k]=nums2[j];
            k++;
            j++;
        }

        if(result.length%2==1){
            return (double)result[result.length/2];
        }
        else{
            return ((double)result[result.length/2] + (double)result[result.length/2-1])/2.0;
        }
        
    }
}