//628. Maximum Product of Three Numbers

class Solution {
    public int maximumProduct(int[] nums) {
        int n = nums.length-1;
        nums = quickSort(nums, 0, n);
        int result1 = nums[n] * nums[n-1] * nums[n-2];
        int result2 = nums[0] * nums[1] * nums[n];
        return result1>result2 ? result1 : result2;
    }

    public int[] quickSort(int[] arr, int low, int high){
        if(low<high){
            int pivot = partition(arr, low, high);
            quickSort(arr, low, pivot-1);
            quickSort(arr, pivot+1, high);
        }
        return arr;
    }

    public static int partition(int[] arr, int low, int high){
        int i = low -1;
        int pivot = arr[high];
        for(int j = low; j<high; j++){
            if(arr[j]<pivot){
                i++;
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
        int temp = arr[i+1];
        arr[i+1] = arr[high];
        arr[high] = temp;

        return i+1;
    }
}